#!/bin/bash

# ๐ ุณูุฑูุจุช ูุดุฑ Book Store
# ุงุณุชุฎุฏู: ./deploy.sh [production|staging]

set -e

# ุชุญุฏูุฏ ุงูุจูุฆุฉ
ENVIRONMENT=${1:-staging}
echo "๐ ุจุฏุก ุงููุดุฑ ูู ุจูุฆุฉ: $ENVIRONMENT"

# ุงูุชุญูู ูู ูุฌูุฏ Docker
if ! command -v docker &> /dev/null; then
    echo "โ Docker ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Docker ุฃููุงู."
    exit 1
fi

# ุงูุชุญูู ูู ูุฌูุฏ Docker Compose
if ! command -v docker-compose &> /dev/null; then
    echo "โ Docker Compose ุบูุฑ ูุซุจุช. ูุฑุฌู ุชุซุจูุช Docker Compose ุฃููุงู."
    exit 1
fi

# ุฅููุงู ุงูุฎุฏูุงุช ุงูุญุงููุฉ
echo "๐ ุฅููุงู ุงูุฎุฏูุงุช ุงูุญุงููุฉ..."
docker-compose down

# ุชูุธูู ุงูุตูุฑ ุงููุฏููุฉ
echo "๐งน ุชูุธูู ุงูุตูุฑ ุงููุฏููุฉ..."
docker system prune -f

# ุจูุงุก ุงูุตูุฑ ุงูุฌุฏูุฏุฉ
echo "๐จ ุจูุงุก ุงูุตูุฑ ุงูุฌุฏูุฏุฉ..."
docker-compose build --no-cache

# ุชุดุบูู ุงูุฎุฏูุงุช
echo "โถ๏ธ ุชุดุบูู ุงูุฎุฏูุงุช..."
docker-compose up -d

# ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุงุช
echo "โณ ุงูุชุธุงุฑ ุจุฏุก ุงูุฎุฏูุงุช..."
sleep 10

# ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช
echo "๐ ุงูุชุญูู ูู ุญุงูุฉ ุงูุฎุฏูุงุช..."
docker-compose ps

# ุงูุชุญูู ูู ุตุญุฉ ุงูุชุทุจูู
echo "๐ฅ ุงูุชุญูู ูู ุตุญุฉ ุงูุชุทุจูู..."
if curl -f http://localhost:3000/health > /dev/null 2>&1; then
    echo "โ ุงูุชุทุจูู ูุนูู ุจูุฌุงุญ!"
    echo "๐ ููููู ุงููุตูู ููุชุทุจูู ุนูู: http://localhost:3000"
else
    echo "โ ุงูุชุทุจูู ูุง ูุณุชุฌูุจ. ุชุญูู ูู ุงูุณุฌูุงุช:"
    docker-compose logs app
    exit 1
fi

echo "๐ ุงููุดุฑ ููุชูู ุจูุฌุงุญ!"
